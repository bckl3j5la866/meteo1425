import asyncio
import logging
from aiogram import Bot
import os
from config import ConfigLoader

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config_loader = ConfigLoader("config.yaml")
config = config_loader.load()

if config and hasattr(config, "telegram"):
    TELEGRAM_BOT_TOKEN = config.telegram.bot_token
    TELEGRAM_CHAT_ID = config.telegram.chat_id
else:
    logger.error("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")
    TELEGRAM_BOT_TOKEN = None
    TELEGRAM_CHAT_ID = None

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN) if TELEGRAM_BOT_TOKEN else None

async def send_telegram_notification(message: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –∫–∞–Ω–∞–ª.
    
    :param message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    if not bot or not TELEGRAM_CHAT_ID:
        logger.error("–¢–æ–∫–µ–Ω –∏–ª–∏ ID —á–∞—Ç–∞ Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.")
        return False

    try:
        await bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message)
        logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: {message[:100]}...")
        return True
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
        return False

async def get_telegram_status() -> dict:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å Telegram –±–æ—Ç–∞.
    """
    return {
        "bot_configured": bot is not None and TELEGRAM_CHAT_ID is not None
    }

async def close_bot_session():
    """
    –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–µ—Å—Å–∏—é –±–æ—Ç–∞.
    """
    try:
        if bot and bot.session:
            await bot.session.close()
            logger.info("‚úÖ –°–µ—Å—Å–∏—è –±–æ—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–µ—Å—Å–∏–∏: {e}")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
async def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã"""
    status = await get_telegram_status()
    logger.info(f"–°—Ç–∞—Ç—É—Å Telegram: {status}")
    
    # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await send_telegram_notification("üîµ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –ø–æ–≥–æ–¥—ã")
    
    await close_bot_session()

if __name__ == "__main__":
    asyncio.run(main())